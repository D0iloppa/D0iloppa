<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="usersSqlMap">
	<select id="getAdminList" resultType="UsersVO">
		select user_id from p_users where admin_yn='Y'
    </select>
	<select id="showDeleteUser" resultType="UsersVO">
		select * from p_users where user_st='D' order by user_id asc
    </select>
	<select id="searchDeletedUsersVO" parameterType="UsersVO" resultType="UsersVO">
		select *
		from p_users
		where user_st='D'
		<if test="searchUser == 'user_id'">
      		and user_id like concat('%', #{searchKeyword}, '%')
		</if>
		<if test="searchUser == 'user_kor_nm'">
			and user_kor_nm like concat('%', #{searchKeyword}, '%')
		</if>
		order by user_id asc
    </select>
	<select id="getAllUsersVOList" resultType="UsersVO">
		select * from p_users where user_st='Y' order by user_kor_nm asc
    </select>
	<select id="getAllOnUsersVOList" resultType="UsersVO">
		select * from p_users where user_st='Y' and hld_offi_gbn!=3 order by user_kor_nm asc
    </select>
	<select id="getUsersVOList" resultType="UsersVO">
		select * from p_users where user_st='Y' and user_type = 1 order by user_kor_nm asc
    </select>
	<select id="getExistUser" resultType="int" parameterType="UsersVO">
		select count(*) from p_users where user_id=#{user_id}
    </select>
	<select id="searchUsersVO" parameterType="UsersVO" resultType="UsersVO">
		select a.*, d.connect_fail_cnt, e.passwd_fail_acc_stop_cnt,e.passwd_fail_acc_stop_use_yn
		from p_users a LEFT OUTER join p_user_connect d on a.user_id=d.user_id, p_password_policy e
		where a.user_st='Y' and user_type = 1
		<if test="searchUser == 'user_id'">
      		and a.user_id like concat('%', #{searchKeyword}, '%')
		</if>
		<if test="searchUser == 'user_kor_nm'">
			and a.user_kor_nm like concat('%', #{searchKeyword}, '%')
		</if>
		order by a.user_id asc
    </select>
	<select id="searchOrgUsersVO" parameterType="UsersVO" resultType="UsersVO">
		<!-- select a.*, d.connect_fail_cnt, e.passwd_fail_acc_stop_cnt
		from p_users a LEFT OUTER join p_user_connect d on a.user_id=d.user_id, p_password_policy e
		where a.user_st='Y' -->
		select c.reg_date as reg_date,c.user_id as user_id,c.user_kor_nm as user_kor_nm,dbo.fn_getGrpNm(a.org_id) as user_group_nm,a.org_id,c.user_eng_nm as user_eng_nm,c.company_nm as company_nm, d.connect_fail_cnt, c.email_addr, c.offi_tel, e.passwd_fail_acc_stop_cnt,e.passwd_fail_acc_stop_use_yn
		from p_organization_user a join p_organization b on a.org_id=b.org_id right join p_users c on a.user_id=c.user_id LEFT OUTER join p_user_connect d on a.user_id=d.user_id, p_password_policy e
		where c.user_st='Y'
		<if test="searchUser == 'user_id'">
      		and c.user_id like concat('%', #{searchKeyword}, '%')
		</if>
		<if test="searchUser == 'user_kor_nm'">
			and c.user_kor_nm like concat('%', #{searchKeyword}, '%')
		</if>
		order by c.user_id asc
    </select>
	<select id="searchUsersVOCorA" parameterType="UsersVO" resultType="UsersVO">
		select c.reg_date as reg_date,c.user_id as user_id,c.user_kor_nm as user_kor_nm,dbo.fn_getGrpNm(a.org_id) as user_group_nm,a.org_id,c.user_eng_nm as user_eng_nm,c.company_nm as company_nm, d.connect_fail_cnt, c.email_addr, c.offi_tel, e.passwd_fail_acc_stop_cnt,e.passwd_fail_acc_stop_use_yn
		from p_organization_user a join p_organization b on a.org_id=b.org_id right join p_users c on a.user_id=c.user_id LEFT OUTER join p_user_connect d on a.user_id=d.user_id, p_password_policy e
		where c.user_st='Y' and (b.org_type='C' or b.org_type='A')
		<if test="searchUser == 'user_id'">
      		and c.user_id like concat('%', #{searchKeyword}, '%')
		</if>
		<if test="searchUser == 'user_kor_nm'">
			and c.user_kor_nm like concat('%', #{searchKeyword}, '%')
		</if>
		order by c.user_id asc
    </select>
    <select id="searchOutUsersVO" parameterType="UsersVO" resultType="UsersVO">
		select c.reg_date as reg_date,c.user_id as user_id,c.user_kor_nm as user_kor_nm,dbo.fn_getGrpNm(a.org_id) as user_group_nm,a.org_id,c.user_eng_nm as user_eng_nm,c.company_nm as company_nm, d.connect_fail_cnt, c.email_addr, c.offi_tel, e.passwd_fail_acc_stop_cnt,e.passwd_fail_acc_stop_use_yn
		from p_organization_user a join p_organization b on a.org_id=b.org_id right join p_users c on a.user_id=c.user_id LEFT OUTER join p_user_connect d on a.user_id=d.user_id, p_password_policy e
		where c.user_st='Y' and c.user_type!=1
		<if test="searchUser == 'user_id'">
      		and c.user_id like concat('%', #{searchKeyword}, '%')
		</if>
		<if test="searchUser == 'user_kor_nm'">
			and c.user_kor_nm like concat('%', #{searchKeyword}, '%')
		</if>
		order by c.user_id asc
    </select>
    <select id="searchDrnUser" parameterType="UsersVO" resultType="UsersVO">
		SELECT a.user_id , a.user_kor_nm, a.user_eng_nm, a.rfile_nm, a.file_path, B1.org_id, B2.org_path, org_nm , dbo.fn_getGrpNm(B1.org_id) as org_fullNm
		FROM p_users A LEFT OUTER JOIN (p_organization_user B1 LEFT OUTER JOIN p_organization B2 ON B1.org_id = B2.org_id) ON a.user_id = b1.user_id
		WHERE user_st='Y' and org_type='H' and user_kor_nm like concat('%', #{searchKeyword}, '%')
    </select>
	<update id="updateUserSt" parameterType="UsersVO">
		update p_users
		set user_st='D'
		where user_id=#{user_id}
    </update>
	<delete id="deletePrjMemberByDeleteUser" parameterType="UsersVO">
    	delete from p_prj_member where user_id=#{user_id}
    </delete>
	<delete id="deletePrjGroupMemberByDeleteUser" parameterType="UsersVO">
    	delete from p_prj_group_member where user_id=#{user_id}
    </delete>
	<update id="updateUserStForOrg" parameterType="OrganizationVO">
		update p_users
		set user_st='D'
		where user_id in (select distinct user_id from p_organization_user a join p_organization b on a.org_id=b.org_id where b.org_id=#{org_id} or b.org_path like concat(#{org_id},'>%') or b.org_path like concat('%>',#{org_id},'>%'))
    </update>
	<insert id="userRegister" parameterType="UsersVO">
		insert into p_users(user_id,user_kor_nm,user_eng_nm,user_type,passwd,company_nm,first_login_yn,hld_offi_gbn,job_tit_cd,offi_res_cd,email_addr,offi_tel,user_st,reg_id,reg_date)
		values(#{user_id},#{user_kor_nm},#{user_eng_nm},#{user_type},#{passwd},#{company_nm},'Y',#{hld_offi_gbn},#{job_tit_cd},#{offi_res_cd},#{email_addr},#{offi_tel},'Y',#{reg_id},#{reg_date})
    </insert>
	<insert id="userRegisterHRInfo" parameterType="UsersVO">
		insert into p_users(user_id,user_kor_nm,user_eng_nm,user_address,user_group_nm,user_type,passwd,company_nm,first_login_yn,hld_offi_gbn,job_tit_cd,offi_res_cd,email_addr,offi_tel,admin_yn,sfile_nm,rfile_nm,file_path,file_size,last_con_prj_id,remote_ip,user_st,reg_id,reg_date,mod_id,mod_date)
		values(#{user_id},#{user_kor_nm},#{user_eng_nm},#{user_address},#{user_group_nm},#{user_type},#{passwd},#{company_nm},'Y',#{hld_offi_gbn},#{job_tit_cd},#{offi_res_cd},#{email_addr},#{offi_tel},'N',#{sfile_nm},#{rfile_nm},#{file_path},#{file_size},#{last_con_prj_id},#{remote_ip},'Y',#{reg_id},#{reg_date},#{mod_id},#{mod_date})
    </insert>
	<update id="updateUserInfo" parameterType="UsersVO">
		update p_users
		set user_kor_nm=#{user_kor_nm},
			user_eng_nm=#{user_eng_nm},
			user_type=#{user_type},
			company_nm=#{company_nm},
			hld_offi_gbn=#{hld_offi_gbn},
			job_tit_cd=#{job_tit_cd},
			offi_res_cd=#{offi_res_cd},
			email_addr=#{email_addr},
			offi_tel=#{offi_tel},
			mod_id=#{mod_id},
			mod_date=#{mod_date}
		where user_id=#{user_id}
    </update>
    <select id="getJobCodeList" parameterType="UsersVO" resultType="UsersVO">
		select * from p_code_info
		where code_gubun = 'JOB'
		order by set_order
		<!-- ORDER BY code_gubun, case when code  like '[0-9]%' then 3 when code like '[A-Za-z]%' then 2 else 1 end -->
    </select>
    <select id="getOffiCodeList" parameterType="UsersVO" resultType="UsersVO">
    	select * from p_code_info
		where code_gubun = 'OFFI'
		order by set_order
		<!-- ORDER BY code_gubun, case when code  like '[0-9]%' then 3 when code like '[A-Za-z]%' then 2 else 1 end -->
    </select>
    <update id="updatePasswd" parameterType="UsersVO">
		update p_users 
		set passwd=#{passwd},
			first_login_yn='Y'
		where user_id=#{user_id} and user_st='Y'
	</update>
    <select id="getSignImg" parameterType="UsersVO">
    	SELECT user_id , rfile_nm , user_kor_nm
		FROM p_users
		WHERE user_id = #{user_id}
    </select>
    
    <select id="getUserJobTypeList" resultType="CodeInfoVO">
    	SELECT *
		FROM p_code_info
		WHERE code_gubun = 'JOB'
		ORDER BY set_order
    </select>
    
    <select id="getJobMaxsetOrder" resultType="CodeInfoVO">
		SELECT MAX(set_order) set_order
		FROM p_code_info
		WHERE code_gubun = 'JOB'
	</select>
	
	<select id="getJobMaxCode" resultType="CodeInfoVO">
		SELECT MAX(code) code
		FROM p_code_info
		WHERE code_gubun = 'JOB'
	</select>
	
	<insert id="insertJobCodeInfo" parameterType="CodeInfoVO">
		INSERT INTO p_code_info(code_gubun, code, code_nm, set_order)
		VALUES('JOB', #{code}, #{code_nm}, #{set_order})
	</insert>
	<insert id="insertOffiCodeInfo" parameterType="CodeInfoVO">
		INSERT INTO p_code_info(code_gubun, code, code_nm, set_order)
		VALUES('OFFI', (select ISNULL(Max(code)+1,1) from p_code_info where code_gubun = 'OFFI'), #{code_nm}, (select ISNULL(Max(set_order)+1,1) from p_code_info where code_gubun = 'OFFI'))
	</insert>
	
	<select id="getUseJobCodeYN" parameterType="UsersVO" resultType="int">
		select count(*) from p_users where job_tit_cd=#{job_tit_cd}
	</select>
	<select id="getUseOffiCodeYN" parameterType="UsersVO" resultType="int">
		select count(*) from p_users where offi_res_cd=#{offi_res_cd}
	</select>
	
	<select id="searchUserWithCode" parameterType="UsersVO" resultType="UsersVO">
		SELECT isnull(pci.code_nm,'')as code_nm , pu.*
		FROM p_users pu left outer join p_code_info pci ON (pu.job_tit_cd = pci.code AND pci.code_gubun = 'JOB')
		WHERE user_id = #{user_id}
	</select>
	
	
</mapper>